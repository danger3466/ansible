---
- name: Installs for WINDOWS
  hosts: WINDOWS

  tasks:

  - name: Ensure Chocolatey installed from internal repo
    win_chocolatey:
      name: chocolatey
      state: present
      source: https://chocolatey.org/install.ps1

  - name: Hide ansible user
    win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList\
      name: ansible
      type: dword
      data: 0

  - name: Drop Ansible dir
    win_file:
      path: "C:\\Ansible"
      state: absent

  - name: Find %USERPROFILE%
    win_shell: echo %USERPROFILE%
    args:
      executable: cmd
    register: USERPROFILE

  - name: Don't sleep
    win_shell: powercfg -x standby-timeout-ac 0

#  - name: Change the hostname
#    win_hostname:
#      name: "{{ inventory_hostname }}"

  - name: Change the workgroup
    win_domain_membership:
      workgroup_name: OKIS
      state: workgroup
      domain_admin_user: ansible
      domain_admin_password: ''

#  - debug:
#      msg: "{{USERPROFILE}}"

  - name: Make Downloads folder
    win_file:
      path: "{{USERPROFILE.stdout_lines[0]}}\\Downloads"
      state: directory

#  - name: Uninstall Google Update Helper
#    win_package:
#      product_id: '{60EC980A-BDA2-4CB6-A427-B07A5498B4CA}'
#      state: absent

  - name: TightVNC
    win_chocolatey:
      name: tightvnc
      state: present

#  - name: TightVNC (password)
#    win_regedit:
#      path: HKLM:\SOFTWARE\TightVNC\Server
#      name: Password
#      type: binary
#      data: "{{ tightvnc_password }}"
#    register: tightvnc

#  - name: TightVNC (ControlPassword)
#    win_regedit:
#      path: HKLM:\SOFTWARE\TightVNC\Server
#      name: ControlPassword
#      type: binary
#      data: "{{ tightvnc_password }}"

#  - name: TightVNC (PasswordViewOnly)
#    win_regedit:
#      path: HKLM:\SOFTWARE\TightVNC\Server
#      name: PasswordViewOnly
#      type: binary
#      data: "{{ tightvnc_password }}"

#  - name: TightVNC (UseVncAuthentication)
#    win_regedit:
#      path: HKLM:\SOFTWARE\TightVNC\Server
#      name: UseVncAuthentication
#      type: dword
#      data: 1

#  - name: TightVNC (restart)
#    win_service:
#      name: tvnserver
#      state: restarted
#    when: tightvnc.changed

  - name: WinRAR (download x86)
    win_copy:
      src: files/wrar591ru.exe
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\winrar.exe"
    when: ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная"

  - name: WinRAR (download x64)
    win_copy:
      src: files/winrar-x64-591ru.exe
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\winrar.exe"
    when: ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная"

  - name: "WinRAR (Check C:\\Program Files\\WinRAR\\WinRAR.exe)"
    win_stat: path="C:\\Program Files\\WinRAR\\WinRAR.exe"
    register: winrar

  - name: "WinRAR (Check C:\\Program Files (x86)\\WinRAR\\WinRAR.exe)"     
    win_stat: path="C:\\Program Files (x86)\\WinRAR\\WinRAR.exe"
    register: winrar_x86
    when: not winrar.stat.exists

  - name: WinRAR (install)
    win_command: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\winrar.exe /s"
    when: not (winrar.stat.exists or winrar_x86.stat.exists)

#  - name: "Find ESET Uninstaller (Check C:\\Program Files\\ESET\\ESET Endpoint Security\\callmsi.exe)"
#    win_stat: path="C:\\Program Files\\ESET\\ESET Endpoint Security\\callmsi.exe"
#    register: eset_uninstaller

#  - debug:
#      var: eset_uninstaller

#  - name: Uninstall ESET Endpoint Security 5
#    win_package:
#      product_id: '{47A99185-5A10-475E-ACFD-34F654E201D1}'
#      state: absent

  - name: ESET Agent (config)
    win_copy:
      src: files/install_config.ini
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\install_config.ini"

  - name: ESET Agent (download x86)
    win_copy:
      src: files/agent_x86.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\agent.msi"
    when: ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная"

  - name: ESET Agent (download x64)
    win_copy:
      src: files/agent_x64.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\agent.msi"
    when: ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная"

  - name: "ESET Agent (Check C:\\Program Files\\ESET\\RemoteAdministrator\\Agent)"     
    win_stat: path="C:\\Program Files\\ESET\\RemoteAdministrator\\Agent"
    register: eset_agent

  - name: ESET Agent (install)
    win_shell: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\agent.msi /quiet"
    args:
      executable: cmd
    when: not eset_agent.stat.exists

#  - name: Install windows updates for ESET Endpoint 7
#    win_updates:
#      whitelist:
#        - KB4474419
#        - KB4490628
#    when: ansible_distribution_major_version|int == 6

  - name: ESET Endpoint 7 (download x86)
    win_copy:
      src: files/eea_nt32.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\eea.msi"
    when: (ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная") and ansible_distribution_major_version|int > 6

  - name: ESET Endpoint 7 (download x64)
    win_copy:
      src: files/eea_nt64.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\eea.msi"
    when: (ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная") and ansible_distribution_major_version|int > 6

  - name: ESET Endpoint 6 (download x86)
    win_copy:
      src: files/eea_nt32_6.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\eea.msi"
    when: (ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная") and ansible_distribution_major_version|int == 6

  - name: ESET Endpoint 6 (download x64)
    win_copy:
      src: files/eea_nt64_6.msi
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\eea.msi"
    when: (ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная") and ansible_distribution_major_version|int == 6

  - name: ESET Endpoint (install)
    win_package:
      path: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\eea.msi"
      arguments: 'ACTIVATION_DATA="{{ eset_key }}" FIRSTSCAN_ENABLE=0'


- name: Installs for location_OFFICE_role_WIN_OFFICE
  hosts: location_OFFICE_role_WIN_OFFICE

  tasks:

  - name: Make move.bat
    template:
      src: templates/move.bat.j2
      dest: "{{USERPROFILE.stdout_lines[0]}}\\move.bat"



- name: Installs for OFFICE
  hosts: OFFICE

  tasks:

  - name: Google Chrome
    win_chocolatey:
      name: googlechrome
      state: present

  - name: Firefox
    win_chocolatey:
      name: firefox
      state: present

#  - name: Thunderbird
#    win_chocolatey:
#      name: thunderbird
#      state: present

  - name: "Adobe Reader DC (Check C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC)"     
    win_stat: path="C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC"
    register: adobe_reader

  - name: "Adobe Reader DC (Check C:\\Program Files\\Adobe\\Acrobat Reader DC)"     
    win_stat: path="C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC"
    register: adobe_reader_x86

  - name: Adobe Reader DC
    win_chocolatey:
      name: adobereader
      state: present
    when: not (adobe_reader.stat.exists or adobe_reader_x86.stat.exists)

#  - name: VLC
#    win_chocolatey:
#      name: vlc
#      state: present

  - name: Office Installer
    win_copy:
      src: files/OInstallLite.exe
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\OInstallLite.exe"

  - name: "Office (Check C:\\Program Files\\Microsoft Office\\root\\Office16)"
    win_stat: path="C:\\Program Files\\Microsoft Office\\root\\Office16"
    register: office16

  - name: "Office (Check C:\\Program Files (x86)\\Microsoft Office\\root\\Office16)"     
    win_stat: path="C:\\Program Files (x86)\\Microsoft Office\\root\\Office16"
    register: office16_x86
    when: not office16.stat.exists

  - name: Office x86 (install)
    win_shell: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\OInstallLite.exe /apps x86 ru-ru word excel powerpoint"
    args:
      executable: cmd
    when: (ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная") and not (office16.stat.exists or office16_x86.stat.exists)

  - name: Office x64 (install)
    win_shell: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\OInstallLite.exe /apps x64 ru-ru word excel powerpoint"
    args:
      executable: cmd
    when: (ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная") and not (office16.stat.exists or office16_x86.stat.exists)


- name: Installs for 1C
  hosts: 1C

  tasks:
  - name: 1C:Предприятие 8 (x86) (8.3.17.1851)
    win_copy:
      src: files/windows_8_3_17_1851
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\"
    when: ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная"

  - name: 1C:Предприятие 8 (x86-64) (8.3.17.1851)
    win_copy:
      src: files/windows64full_8_3_17_1851
      dest: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\"
    when: ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная"

  - name: "1C:Предприятие 8 (Check C:\\Program Files\\1cv8\\8.3.17.1851\\bin\\1cv8.exe)"
    win_stat: path="C:\\Program Files\\1cv8\\8.3.17.1851\\bin\\1cv8.exe"
    register: onecv8

#  - debug:
#      var: onecv8

  - name: "1C:Предприятие 8 x86 (Check C:\\Program Files (x86)\\1cv8\\8.3.17.1851\\bin\\1cv8.exe)"     
    win_stat: path="C:\\Program Files (x86)\\1cv8\\8.3.17.1851\\bin\\1cv8.exe"
    register: onecv8_x86
    when: not onecv8.stat.exists

  - name: 1C:Предприятие 8 (x86-64) (install)
    win_package:
      path: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\windows64full_8_3_17_1851\\1CEnterprise 8 (x86-64).msi"
      arguments:
        - /qn
        - TRANSFORMS=adminstallrelogon.mst;1049.mst
        - DESIGNERALLCLIENTS=1
        - THINCLIENT=1
        - WEBSERVEREXT=0
        - SERVER=0
        - CONFREPOSSERVER=0
        - CONVERTER77=0
        - SERVERCLIENT=0
        - LANGUAGES=RU
      state: present
    when: (ansible_architecture == "64-bit" or ansible_architecture == "64-разрядная") and not (onecv8.stat.exists or onecv8_x86.stat.exists)

  - name: 1C:Предприятие 8 (x86) (install)
    win_package:
      path: "{{USERPROFILE.stdout_lines[0]}}\\Downloads\\windows_8_3_17_1851\\1CEnterprise 8.msi"
      arguments:
        - /qn
        - TRANSFORMS=adminstallrelogon.mst;1049.mst
        - DESIGNERALLCLIENTS=1
        - THINCLIENT=1
        - WEBSERVEREXT=0
        - SERVER=0
        - CONFREPOSSERVER=0
        - CONVERTER77=0
        - SERVERCLIENT=0
        - LANGUAGES=RU
      state: present
    when: (ansible_architecture == "32-bit" or ansible_architecture == "32-разрядная") and not (onecv8.stat.exists or onecv8_x86.stat.exists)

  - name: Удаление 1C:Предприятие 8 (8.3.15.1565)
    win_package:
      product_id: '{49F75FA7-719B-429D-B44D-4C5D52254FFC}'
      state: absent

  - name: Удаление 1C:Предприятие 8 (x86-64) (8.3.16.1063)
    win_package:
      product_id: '{46AF89A9-ABD1-4816-8FB2-DD45B785AC2F}'
      state: absent


- name: Installs for 1C in Office
  hosts: location_OFFICE_role_WIN_1C

  tasks:
  - name: Find %APPDATA%
    win_shell: echo %APPDATA%
    args:
      executable: cmd
    register: APPDATA

  - win_lineinfile:
    path: "{{APPDATA.stdout_lines[0]}}\\1C\\1CEStart\\1cestart.cfg"
    line: CommonInfoBases=\\share.okis-s.ru\\1C\base.v8i

